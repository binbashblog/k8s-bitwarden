#######################################################################
# Modified by binbashblog for k8s                                     #
#######################################################################

server {
  listen 80 default_server;
  listen [::]:80 default_server;
  server_name bitwarden.<fqdn>.com;

# disable https as it handled by the nginx ingress
#  return 301 https://bitwarden.<fqdn>.com$request_uri;
#}

# disable https as it handled by the nginx ingress
#server {
#  listen 8443 ssl http2;
#  listen [::]:8443 ssl http2;
#  server_name bitwarden.<fqdn>.com;

#  ssl_certificate /etc/ssl/bitwarden.<fqdn>.com/certificate.crt;
#  ssl_certificate_key /etc/ssl/bitwarden.<fqdn>.com/private.key;
#  ssl_session_timeout 30m;
#  ssl_session_cache shared:SSL:20m;
#  ssl_session_tickets off;

#  ssl_protocols TLSv1.2;
#  ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:E
#CDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256
#:ECDHE-RSA-AES128-SHA256";
  # Enables server-side protection from BEAST attacks
#  ssl_prefer_server_ciphers on;

#  include /etc/nginx/security-headers-ssl.conf;
  include /etc/nginx/security-headers.conf;

  location / {
    proxy_pass http://127.0.0.1:5500/;
#    include /etc/nginx/security-headers-ssl.conf;
    include /etc/nginx/security-headers.conf;
    add_header Content-Security-Policy "default-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https://haveibeen
pwned.com https://www.gravatar.com; child-src 'self' https://*.duosecurity.com; frame-src 'self' https://*.duosecurity.com; connect-
src 'self' wss://bitwarden.london.flextrade.com https://api.pwnedpasswords.com https://twofactorauth.org; object-src 'self' blob:;";
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Robots-Tag "noindex, nofollow";
  }

  location /alive {
    return 200 'alive';
    add_header Content-Type text/plain;
  }

  location = /app-id.json {
    proxy_pass http://127.0.0.1:5500/app-id.json;
#    include /etc/nginx/security-headers-ssl.conf;
    include /etc/nginx/security-headers.conf;
    proxy_hide_header Content-Type;
    add_header Content-Type $fido_content_type;
  }

  location = /duo-connector.html {
    proxy_pass http://127.0.0.1:5500/duo-connector.html;
  }

  location = /u2f-connector.html {
    proxy_pass http://127.0.0.1:5500/u2f-connector.html;
  }

  location = /sso-connector.html {
    proxy_pass http://127.0.0.1:5500/sso-connector.html;
  }

  location /attachments/ {
    proxy_pass http://127.0.0.1:5501/;
  }

  location /api/ {
    proxy_pass http://127.0.0.1:5502/;
  }

  location /icons/ {
    proxy_pass http://127.0.0.1:5505/;
  }

  location /notifications/ {
    proxy_pass http://127.0.0.1:5506/;
  }

  location /notifications/hub {
    proxy_pass http://127.0.0.1:5506/hub;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $http_connection;
  }

  location /events/ {
    proxy_pass http://127.0.0.1:5507/;
  }

  location /sso {
    proxy_pass http://127.0.0.1:5508;
#    include /etc/nginx/security-headers-ssl.conf;
    include /etc/nginx/security-headers.conf;
    add_header X-Frame-Options SAMEORIGIN;
  }

  location /identity {
    proxy_pass http://127.0.0.1:5503;
#    include /etc/nginx/security-headers-ssl.conf;
    include /etc/nginx/security-headers.conf;
    add_header X-Frame-Options SAMEORIGIN;
  }

  location /admin {
    proxy_pass http://127.0.0.1:5504;
#    include /etc/nginx/security-headers-ssl.conf;
    include /etc/nginx/security-headers.conf;
    add_header X-Frame-Options SAMEORIGIN;
  }

  location /portal {
    proxy_pass http://127.0.0.1:5509;
#    include /etc/nginx/security-headers-ssl.conf;
    include /etc/nginx/security-headers.conf;
    add_header X-Frame-Options SAMEORIGIN;
  }
}
